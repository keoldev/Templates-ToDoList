AWSTemplateFormatVersion: "2010-09-09"

Description: "AWS CloudFormation template to create lambda resource"
    
Resources:
  DynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "db-todolist"
      AttributeDefinitions:
        - AttributeName: "user_id"
          AttributeType: "S"
        - AttributeName: "task_id"
          AttributeType: "S"
      BillingMode: PAY_PER_REQUEST
      KeySchema: # Required
        - AttributeName: "user_id"
          KeyType: "HASH"
        - AttributeName: "task_id"
          KeyType: "RANGE"

  S3BucketAPI:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'api-resources-todolist'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:Scan
                Resource: !GetAtt  DynamoTable.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !GetAtt S3BucketAPI.Arn
              - Effect : Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
  
  TodoLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json

          def lambda_handler(event, context):
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      FunctionName: to-do-list-lambda
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoTable

Outputs:
  TodoLambdaArn:
    Description: "Lambda Function Arn"
    Value: !GetAtt TodoLambda.Arn
